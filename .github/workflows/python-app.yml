name: Lint with flake8

on: [push, pull_request]

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
    - name: Cache YOLOv3-tiny cfg and weights
      id: cache-yolov3-tiny
      uses: actions/cache@v2
      with:
        path: ~/.imglocate
        key: ${{ runner.os }}-yolov3-tiny
    - name: Download YOLOv3-tiny cfg and weights
      if: steps.cache-yolov3-tiny.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/.imglocate
        curl -Ls -o ~/.imglocate/yolov3-tiny.cfg https://github.com/pjreddie/darknet/raw/master/cfg/yolov3-tiny.cfg
        curl -Ls -o ~/.imglocate/yolov3-tiny.weights https://pjreddie.com/media/files/yolov3-tiny.weights

  build:
    needs: fetch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        # install opencv-python
        pip install opencv-python==3.4.10.35
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --select=E9,F63,F7,F82 --show-source
        # exit-zero treats all errors as warnings.
        flake8 . --exit-zero --max-complexity=10
